#!/bin/sh
#
# Magick IRC Services
#
# $Id$
# (c) 1997-2002 Preston Elder <prez@magick.tm>
# (c) 1998-2002 William King <ungod@magick.tm>
#
# The above copywright may not be removed under any circumstances,
# however it may be added to if any modifications are made to this
# file.  All modified code must be clearly documented and labelled.
#
# This code is released under the Artistic License v2.0 or better.
# The full text of this license should be contained in a file called
# COPYING distributed with this code.  If this file does not exist,
# it may be viewed here: http://www.magick.tm/m2/license.html
#
# =======================================================================
#
# For official changes (by the Magick Development Team),please
# check the ChangeLog* files that come with this distribution.
#
# Third Party Changes (please include e-mail address):
#
# N/A
#
# =======================================================================
#
# This is a script suitable for use in a crontab.  It makes a timestamped
# copy of your database file, and if you have specified remote locations,
# send it there.
#
# You'll need to edit this script for your services.
#
# To backup your databases every hour, put the following line in your
# crontab:
#    0 * * * *   /home/mydir/servicesbkup
# And if you don't want to get email from crontab when it backs up your
# databases, put the following in your crontab:
#    0 * * * *   /home/mydir/servicesbkup >/dev/null 2>&1
#

# Terminate Check (uncomment to terminate the auto-start).
exit 0

# change this to the directory you run your services from.
servicesdir="/usr/local/ircd/services"

# change this to whatever your database file is called.
dbfile="magick.mnd"

# change this to wherever you want the timestamped backups to go.
bkupdir="$servicesdir/bkup"

# This is the time (in days) to keep old backups of the databases
# Files older than this time (in days) will be removed automatically.
bkuptime=7

# This requires SCP (Secure Copy, part of SSH).
# The remote user@host:filename's to put the database file for offsite
# file storage, each entry must be seperated by a space.
# NOTE: The remote host must not require password (ie. your public
#	key must be in their authorized keys list).
offsite=""

########## you probably don't need to change anything below here ##########

# Just a precaution.
PATH="$PATH:/usr/local/bin"
umask 027

# Get the timestamp ...
cd $servicesdir
TS=`date +%Y%m%d%H%M%S`

# Remove old backups, and copy the database into the backup directory
rm -f `find $bkupdir -name "$dbfile.*" -mtime +$bkuptime`
cp $dbfile $bkupdir/$dbfile.$TS

# Send it offsite if needs be
for hst in $offsite; do
   scp -B -q $dbfile $hst
done

exit 0
