AC_INIT(Makefile)

PACKAGE=magick
VERSION=2.0

CFLAGS="$CFLAGS -fno-default-inline"
CPPFLAGS="$CPPFLAGS -fno-default-inline"

AC_PROG_MAKE_SET(make)
AC_PROG_INSTALL(install-sh)
AC_ARG_PROGRAM

AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB

AC_ARG_WITH(acelib, [  --with-acelib=file      Location of ACE library file],
	[if test -f ${withval}; then
		libdir="`echo ${withval} | sed -e s,/\`basename ${withval}\`$,,`"
		libfile="`echo \`basename ${withval}\` | sed -e s,^lib,, -e s,\.a$,, -e s,\.so$,,`"
		if test ! "x$libdir" = "x$libfile"; then
			LIBS="$LIBS -L${libdir}"
		fi
		if test ! "x$libfile" = "x"; then
			LIBS="$LIBS -l$libfile"
		fi
		libace=1
	fi])
AC_ARG_WITH(aceinc, [  --with-aceinc=dir       Location of ACE include files],
	[CFLAGS="$CFLAGS -I${withval}"
	CPPFLAGS="$CPPFLAGS -I${withval}"])

AC_ARG_ENABLE(bsdthread, [  --enable-bsdthread      Use BSD-style pthreads],
	[LIBS="$LIBS -pthread"
	libthread=1])
AC_ARG_WITH(threadlib, [  --with-threadlib=file   Location of threads library file],
	[if test -f ${withval}; then
		libdir="`echo ${withval} | sed -e s,/\`basename ${withval}\`$,,`"
		libfile="`echo \`basename ${withval}\` | sed -e s,^lib,, -e s,\.a$,, -e s,\.so$,,`"
		if test ! "x$libdir" = "x$libfile"; then
			LIBS="$LIBS -L${libdir}"
		fi
		if test ! "x$libfile" = "x"; then
			LIBS="$LIBS -l$libfile"
		fi
		libthread=1
	fi])
AC_ARG_WITH(threadinc, [  --with-threadinc=dir    Location of threads include files],
	[CFLAGS="$CFLAGS -I${withval}"
	CPPFLAGS="$CPPFLAGS -I${withval}"])

AC_ARG_WITH(zlib, [  --with-zlib=file        Location of compression library file],
	[if test -f ${withval}; then
		libdir="`echo ${withval} | sed -e s,/\`basename ${withval}\`$,,`"
		libfile="`echo \`basename ${withval}\` | sed -e s,^lib,, -e s,\.a$,, -e s,\.so$,,`"
		if test ! "x$libdir" = "x$libfile"; then
			LIBS="$LIBS -L${libdir}"
		fi
		if test ! "x$libfile" = "x"; then
			LIBS="$LIBS -l$libfile"
		fi
		libz=1
	fi])
AC_ARG_WITH(zinc, [  --with-zinc=dir         Location of compression include files],
	[CFLAGS="$CFLAGS -I${withval}"
	CPPFLAGS="$CPPFLAGS -I${withval}"])


if test 0$libace -eq 0; then
AC_CHECK_LIB(ACE,	_make_ACE_Naming_Context,
	[LIBS="$LIBS -lACE"
	libace=1])
fi

if test 0$libace -eq 0; then
	echo "
ACE (Advanced Communications Environment) is an essential
part of Magick II, and is therefore required to compile
and run it.  ACE could not be found on your system.  If you
have compiled it, please specify the library location with
the option --with-acelib=<dir>

You may obtain ACE from www.cs.wustl.edu/~schmidt/ACE.html"
	exit 1
fi

if test 0$libthread -eq 0; then
AC_CHECK_LIB(pthread,	pthread_create,	
	[LIBS="$LIBS -lpthread"
	libthread=1])
AC_CHECK_LIB(pth,	pthread_create,	
	[LIBS="$LIBS -lpth"
	libthread=1])
fi

if test 0$libthread -eq 0; then
	echo "
Magick II requires a threads library to exist (and work)
before it will run.  You do not have any threads
implementation on your system.  If you have, but it just
could not be found, please specify the library location
with the option --with-threadlib=<dir>

NOTE: BSD threads are internal to libc, and so must pass
      the '-pthread' argument to gcc.  To specify BSD
      threads, use --enable-bsdthread

You may obtain GNU pth from www.gnu.org/software/pth"
	exit 1
fi


if test 0$libz -eq 0; then
AC_CHECK_LIB(z,		inflate,
	[LIBS="$LIBS -lz"
	libz=1])
AC_CHECK_LIB(gz,	inflate,
	[LIBS="$LIBS -lgz"
	libz=1])
fi

if test 0$libz -eq 0; then
	echo "
The Z compression library (zlib) is required to compile and
run Magick II.  zlib could not be found on your system.  If
you have compiled it, please specify the library location with
the option --with-zlib=<dir>

You may obtain zlib from www.cdrom.com/pub/infozip/zlib"
	exit 1
fi

AC_DEFINE(MAGICK_HAS_EXCEPTIONS)


AC_ARG_ENABLE(des, [  --enable-des            Add DES encryption to Magick (default)
  --disable-des           Remove DES encryption from Magick],
	[case "${enablevel}" in
		yes) des=false;;
		no) des=true;;
		*) AC_MSG_ERROR(bad value ${enablevel} for DES option);;
	 esac], [des=true])
if test "$des" = "true"; then
	AC_DEFINE(HASCRYPT)
fi

AC_CHECK_FILE(helper/build-ver, [helper/build-ver])

AC_OUTPUT([Makefile src/antlr/Makefile src/des/Makefile src/xml/Makefile src/Makefile \
		docs/Makefile])
