#!/bin/sh
#
# This is a script suitable for use in a crontab.  It checks to make sure
# your services are running.  If your services arn't found, it'll try to
# start them back up.
#
# You'll need to edit this script for your services.
#
# To check for your services every 10 minutes, put the following line in your
# crontab:
#    0,10,20,30,40,50 * * * *   /home/mydir/serviceschk
# And if you don't want to get email from crontab when it checks you services,
# put the following in your crontab:
#    0,10,20,30,40,50 * * * *   /home/mydir/serviceschk >/dev/null 2>&1
#

# Terminate Check
#exit 0

# change this to the directory you run your services from:
servicesdir="/usr/local/lib/services"

# IF ace isnt in your LD_LIBRARY_PATH, location of ACE library
acelibdir="/usr/local/lib"

# command to start services if they're not running.
startcommand="./magick"

# change this to whatever your PID file is called
pidfile="magick.pid"

# change this to whatever your database file is called
dbfile="magick.mnd"

########## you probably don't need to change anything below here ##########

cd $servicesdir
if test -r ${pidfile}; then
  # there is a pid file -- is it current?
  servicespid=`cat ${pidfile}`
  if `kill -CHLD $servicespid >/dev/null 2>&1`; then
    # it's still going
    # back out quietly
    exit 0
  fi
  echo ""
  echo "Stale ${pidfile} file (erasing it)"
  rm -f ${pidfile}
fi
echo ""
echo "Couldn't find the services running.  Starting them ..."
echo ""

# If a new file exists, we died while saving ...
if [ -s $dbfile.new ]; then
  # If an old file exists, the new was finished
  if [ -s $dbfile.old ]; then
    cp $dbfile.new $dbfile
  fi
  rm -f $dbfile.old $dbfile.new
fi

export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$acelibdir"
$startcommand

exit 0
