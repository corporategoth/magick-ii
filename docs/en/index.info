This is index.info, produced by makeinfo version 4.0 from
/tmp/sgmltmp.index14165.info.2.

   \input texinfo


File: index.info,  Node: Top,  Next: Introduction,  Up: (dir)

The Magick Handbook
*******************

     Magick Development Team `magick-devel@magick.tm'
     Version 2.0 , Wed Apr 26 21:23:35 EST 2000

   This Handbook describes Magick Version 2.0

* Menu:

* Introduction::
* Installation::
* Usage::
* Questions and Answers::
* License::
* Copyright::


File: index.info,  Node: Introduction,  Next: Installation,  Prev: Top,  Up: Top

Introduction
************

   Magick IRC Services are a program that is designed to interface with
an Internet Relay Chat (IRC) network, and offer its users, operators
and administrators services such as the ability to register nicknames
so they cannot be taken by anyone else, the ability to register
channels with pre-defined access lists and kick lists so that channels
may not be taken over, the ability to leave offline messages for other
users, and many network control mechanisms to stop things like
flooding, abusive users, and many other things.

   Magick services adhere to RFC 1459, and many variants of it.  The
changes to the base protocol will not be discussed in this document, as
there are too many of them, and so many different distinct protocols
around nowadays, however Magick has been designed to cope with them
all, with a minimum of fuss (as long as they support services of this
nature).

* Menu:

* Dedication::
* Authors::
* Changes::


File: index.info,  Node: Dedication,  Next: Authors,  Up: Introduction

Dedication
==========

   Magick is dedicated to the memory of PreZ's loving sister, Stacey
Louise Elder (1st Jan, 1975 - 25th Feb, 1998). She has been there for
me more than anyone over the years, and I was distraught when she died,
may her Lord love her as much as I did, and keep her safe like I could
not. Merry Parting, Dear Sister.

   Magick is also dedicated to the memory of Ungod's brother, Edward
Kevin King (28th Aug, 1982 - 21st Nov, 1997), His life was short, but
his memory is great, never will those who knew him forget him.


File: index.info,  Node: Authors,  Next: Changes,  Prev: Dedication,  Up: Introduction

Authors
=======

   Magick is designed and developed by the Magick Development Team
magick-devel@magick.tm.  Any bugs, feature requests, comments, etc
should be directed at this mailing list.  The development team is an
OPEN team, however certain skills are required to join, not the least
of which is the ability to program in C and C++, and to use CVS.  To
join this team, please e-mail prez@magick.tm for further details.

   The Magick Alpha Team magick-alpha@magick.tm test current
development versions of Magick, finding not only bugs, but also making
sure it is a user friendly and understandable product, so it may be
changed at the same time its being designed if needs be (rather than
going back and re-writing it).  The alpha team is an OPEN testing team,
and you may join it by first downloading and installing/setting up the
current alpha version of Magick (if you cannot do this on your own, its
recommended you do not join the alpha team), and then e-mailing
majordomo@magick.tm with "subscribe magick-alpha" (no quotes, on one
line).

   The Magick Beta Team magick-beta@magick.tm test versions of magick
that have been through alpha testing, and are in the final phase of
development.  The beta team's main goal is to find bugs before Magick
is released, so they do not get out into the release version of Magick.
The beta team is an OPEN testing team, and you may join it by first
down- loading and installing/setting up the current beta version of
Magick, and then e-mailing majordomo@magick.tm with "subscribe
magick-beta" (no quotes, on one line).

   The following people have contributed to the final product of Magick
II (testers not included):

`Programmers'
        * Preston Elder

        * William King

`Designers (some coding)'
        * Patrick Prins

`Supporters'
        * Marieke Bermon

        * Kelly Hill

        * Emma Ellison

        * Todd Wright

        * Matt Heckaman

`Supporters Who Don't Know It'
        * Coca-Cola Amatil        - Life Support *bleep ... bleep*

        * Nescafe Blend 43        - See above (any kind of caffeine!)

        * Tschaicovski    - If you don't understand, you never will...


File: index.info,  Node: Changes,  Prev: Authors,  Up: Introduction

Changes
=======

* Menu:

* Magick II::
* Magick I::
* Services 3-0::
* Pre-Services 3-0::


File: index.info,  Node: Magick II,  Next: Magick I,  Up: Changes

Magick II
---------

   Total re-write in C++, so version .0 is merely a 'new feature' list.

   * 2000/??/?? .0
        * Fully multi-threaded (can do >1 thing at once)

        * Database saves in XML and supports compression and
          encryption. Is also no longer endian specific.

        * Works on most *NIX and all Win32 platforms.

        * Fully multi-lingual (log files, help, etc).

        * Supports DCC file transfers and a filesystem (memo
          attachments, nickserv pictures or public FS).

        * Times saved in GMT, so timezone inspecific.

        * Committee-based, can also add new committees.

        * Can now lock any SET option (except text fields).

        * Supports HTM (High Traffic Mode).

        * Supports ALOT more IRC protocols (and alot of their more
          specialised features) and can switch irc protocols without
          need to recompile.

        * Can now set time limits on akills.

        * Supports IRC Operator Deny (ensures mask cant oper).

        * Services ignore now ignores by mask, not nickname.

        * Supports TRACING, for on-line debugging.

        * Has SQUIT protection (to save on IDENT's).

        * Many new ChanServ features like Kick On Ban, timed ban
          removal, channel greetings, on-join messages.

        * Nicknames & Channels now have a NoExpire flag.

        * Time delay on memo sending to allow continuance or
          cancellation of memos, or DCC of file attachments.

        * 'Read' and 'Unread' status on memos / news articles.

        * Supports multiple connection entries (aka. C/N's).

        * Can bind to a single IP address.

        * Supports multiple nicknames for same service.

        * Limits placed on time between registrations and amount of
          channels a user may own.

        * Clone prot will auto-akill for too many triggers.

        * MANY, MANY, MANY more enhancements.


File: index.info,  Node: Magick I,  Next: Services 3-0,  Prev: Magick II,  Up: Changes

Magick I
--------

   Renamed to this to avoid conflicting version numbers, etc and finally
rid myself of all the excess EsperNet baggage.

   * 1999/02/20 .4
        * Added copyrights back from EsperNet, so they would stop
          bitching at me for removing them (even though I DID modify
          the code to an extent they no longer resemble their
          services).  *shrug* some people.

        * Added configuration file (see DOC dir) (Ungod)

        * Added messages.h to customise Magick output.

        * Added SYNC[lowbar]TIME (dbase save) showing option

        * Made MODE strings (User, Channel, ChanInfo) DYNAMIC

        * Fixed AutoUpdate on databases

        * Fixed fuckloads more bugs (as usual).

        * Added killing for repeated password failures.

        * Added LIVE (non-fork) mode (CTRL-C forks).

        * Added MS REPLY, NS ACCESS CURRENT and NS SLAVES functions.

   * 1998/01/20 .3
        * Added MLOCK +i and +k support (ChanServ will keep channel if
          no one in it!).

        * doc/Distribution - READ it (and all files in that DIR!) :)

        * Removed time[lowbar]zone and added the "X time ago" formats

        * Fixed lots and lots of bugs, and optimised alot of code!

        * Replaced IRCOP[lowbar]OVERRIDE with OVERRIDE[lowbar]LEVEL (6
          levels)

        * Added TimeZone support for backup services (fixes timings)

        * Added auto -v and -o for non-access'd people off split

        * Added Nick Linking (BIG MF of an addition)

        * Replaced old IGNORE with Flood Protect (smarter system!)

        * Theres lots more little additions, but too many to document.

   * 1997/12/30 .2
        * Added new revenge level (REVERSE, now NONE will do NOTHING).

        * Fixed a few minor bugs (with unsuspension, breakdown
          percentages, and handling nick collides, etc).

        * Moved Services OP list to a access list-style format.

        * Removed the SUPER[lowbar]PASSWORD - now only the
          SERVICES[lowbar]ADMINS (hardcoded in config.h) can do that :)

        * Added removing by number to ALL lists now :)

        * Added OperServ MASKLIST (like USERLIST but accepts user@host).

        * Removed the magick.msg and magick.omsg in favour of the new
          OperServ LOGONMSG and OPERMSG commands :)

        * Wrote both user and oper documentation for ALL commands!

   * 1997/12/15 .1
        * Optimized code and implemented hash tables (if you dont know,
          dont worry - just take it as a good thing!).

        * Added some of Andy Church's services routines (overflow stuff,
          some socket stuff, and the configure script mainly).

        * Removed upaccess - people should have used it, or not need it.

        * Added MemoServ OPERSEND.

        * Fixed user/oper counting when SQUIT.

        * Fixed ghost command and Channel/Nick expiry bugs.

        * Added Users on Servers breakdown (OperServ)

        * OFF/ON commands now close/open logs aswell.

   * 1997/12/08 .0
        * Forgot the new services.h for Services 3.0.9, included here.

        * Veriable ChanServ levels implemented (finally).

        * Added deletion of user from access lists, and all a user's
          channels when a user is deleted.

        * Moved names for services to config.h

        * Magick know more about their own actions (dont laugh!)

        * IrcOP's dont trigger clone protection (are ignored).

        * Added ability to use PRIVMSG instead of NOTICE.

        * Added ChanServ JOIN ability (some like it - I dont).

        * Added ChanServ REVENGE module, for protecting userlist.

        * AKILL and CLONE may now be removed by number.


File: index.info,  Node: Services 3-0,  Next: Pre-Services 3-0,  Prev: Magick I,  Up: Changes

Services 3-0
------------

   * 1997/11/30 .9
        * Little maintinance (checked all various compiles, etc).

        * Fixed MAJOR bug with list-duplication on re-connect.

        * Minor bugfixes and adds (OFF reasons, pidfile fix, etc)

   * 1997/11/26 .8
        * Changed the way CLONE detection works (MAJORLY!)

        * Added "CLONE" for allowing more than "Default max clones"

        * Fixed bug that didnt reset "current online" lists.

        * Added "is already there" and "kill all matching" to akill

        * Added chanserv Auto-Unban for when ppls are banned on a
          channel by someone equal to or lower than them.

        * Capped the chanserv levels (to stop the "10000" bug).

        * Fixed the chanserv UNBAN option so it does ALL bans.

        * Added 'bounce bans on link' for def[lowbar]level(2)+ (10
          usually).

   * 1997/11/20 .7
        * Fixed a few bugs (nickserv IDENT, Globals and Mass -v's)

        * Removed SKELETON defines - obsolite by Pick 'n' Choose.

        * Removed test/ directory - was old, outdated and useless!

        * Added (optional) mask restrictions to USERLIST and CHANLIST.

        * AKILL mask's must be >7 chars in length (stop *@*.com).

        * Added Services Restart/Reconnect - see config.h for details.

        * Added Services Leveling to replace READONLY - better way of
          implementing backup services versions, etc.

   * 1997/11/10 .6
        * Fixed up the "Pick 'n' Choose" section of config.h so it now
          actually makes the end result smaller :)

        * Added ChanServ and NickServ SUSPEND/UNSUSPEND functions

        * AKILL's will now expire after a time specified in config.h

        * Added PAKILL - non-expiring AKILLS settable by SOP's

        * Channel/Nick memos will get erased with the channel/nick

        * Added ON/OFF so u can enable/disable services without QUIT

        * ON, OFF, QUIT, SHUTDOWN and RAW are passworded (config.h)

   * 1997/11/05 .5
        * Implemented DAL4.4.15+ Services Support, Including:
             * Killing users without a Killed (IrcOp (reason))

             * Server and Nick quarentining via. OperServ

             * Setting of nick's modes with MODE command.

             * CHANGE nick instead of KILL it on nick protection

        * SOP's get help for their commands in /msg OperServ HELP

        * Memo Forwarding To/From Nick/Channel (in any combo)

        * Message to users when they /oper (services.omsg)

        * Made use of the till now unused def[lowbar]access in
          chanserv.c

   * 1997/10/30 .4
        * Added support for DAL4.4.15+ servers.

        * Moved up all chanserv levels by 5 - 5 is now auto-voice.

        * Added /msg operserv listsops (FINALLY!)

        * SOPS now need to be /oper'd to be SOPS (oops)

        * Oper override of chanserv now [num   ]definable (in config.h)

   * 1997/10/22 .3
        * Fixed a bug in ignore (was stuffing ACCESS list)

        * Added OperServ Mode [num   ]channel returning current modes

        * Opers can override chanserv op/deop/invite/unban

        * SOPs can override chanserv clear

   * 1997/10/21 .2
        * Added READ ALL to MemoServ (channel and nick)

        * Added ability for oper to op, deop, invite, unban (ChanServ)

        * Added ability for SOP to use clear (ChanServ)

        * Added hard-coded /msg HelpServ Credits (so sue me).

        * Added memo IGNORE list to nickserv.

        * Fixed the nickserv SET IRCOP function

   * 1997/09/15 .1
        * Only Lvl 20 or sender can delete channel news

        * Fixed bug in NickServ that Mis-Saved URL/NICK fields

   * 1997/09/15 .0
        * Services now respawn if /kill'd

        * Message to users when logon added (services.msg)

        * Disabled @* (and @*.*, etc) AKILLS except for SOPS

        * Disabled @* (and @*.*, etc) AKICKS except for Level 20's

        * Created FILE[lowbar]VERSION 3 (autoconverts from 2)

        * Added NickServ URL and EMAIL fields (v3)

        * Added ChanServ URL field (v3)

        * Added NEWS system (Basically Channel MEMO's)

        * Added IRC Operator NickServ flag (no nick expiry)

        * Added ChanServ level 20 (can set all but PASS and FOUNDER)

        * Added CURRENT TIME to info displays


File: index.info,  Node: Pre-Services 3-0,  Prev: Services 3-0,  Up: Changes

Pre-Services 3-0
----------------

   Originally, Magick was based on Services 2.2.26, by Andrew Church.
As of Magick II, they are no longer based in any way, shape or form on
these services.


File: index.info,  Node: Installation,  Next: Usage,  Prev: Introduction,  Up: Top

Installation
************

* Menu:

* How to obtain Magick::
* Requirements::
* ACE Installation::
* Basic Installation::
* Compilers and Options::
* Compiling For Multiple Architectures::
* Installation Names::
* Optional Features::
* Specifying the System Type::
* Sharing Defaults::
* Operation Controls::
* Security Tips::


File: index.info,  Node: How to obtain Magick,  Next: Requirements,  Up: Installation

How to obtain Magick
====================

   The Magick home page can be found at: urlnam

   Magick is freely downloadable from: urlnam

   The Magick public mailing list is magick@magick.tm To subscribe,
email majordomo@magick.tm with `subscribe magick' (no quotes) in the
text of the message.


File: index.info,  Node: Requirements,  Next: ACE Installation,  Prev: How to obtain Magick,  Up: Installation

Requirements
============

   Before you begin compilation of Magick, you must have a fully
compiled version of the Adaptive Communications Environment (ACE), the
ZLIB compression library, and a threads library such as pthreads.

   If you are missing any of the above, you may obtain them as follows:
   * ACE

   * ZLIB

   * PTH

   BSD USERS - BSD has inbuilt its threads library into its default
operating system, and you do not need a separate threads library,
however all versions before 3.4 with the threads patch applied, or 4.0
will not work, due to a badly implemented threads library.

   You must compile each of the above products before attempting to
build Magick.  Magick will look for them in the configure phase.


File: index.info,  Node: ACE Installation,  Next: Basic Installation,  Prev: Requirements,  Up: Installation

ACE Installation
================

   I've included this section now because people seem to have troubles
installing the ACE library obtained above.  One special note for people
wanting to install ACE.  Do NOT use the `configure' utility.  This
utility is still in its infancy for ACE, and tends not to work.

   Instead, you should follow the instructions that are outlined in the
ACE-INSTALL file, which is simply (from the ACE[lowbar]wrappers
directory):

     export ACE_ROOT=$PWD
     cd ace
     ls config*    (find the one for your system)
     ln -s config-your-system.h config.h
     cd ..
     cd include/makeinclude
     ls platform*    (find the one for your system)
     ln -s platform_your_system.GNU platform_macros.GNU
     cd ../..
     make

   Note on the above.  The `export ACE[lowbar]ROOT=' command may not
work on your shell.  csh and tcsh users will have to use `set
ACE[lowbar]ROOT=', and on some other weird shells, just
`ACE[lowbar]ROOT='.  Try them until you get one that doesn't error.
Once you have one that doesn't have an error, just type `echo
$ACE[lowbar]ROOT' to ensure it gives you your current directory, if
not, keep trying.  I love unix standards :)

   Note, If you get problems in the make with errors like:

   ACE[lowbar]wrappers/include/makeinclude/wrapper[lowbar]macros.GNU,
line 135: Missing dependency operator

   Your version of make is either old or not GNU standard.  ACE requires
a GNU standard make program to compile.  First see if the program
`gmake' exists, and if so try it, if not, or it doesn't work, please
download it by going to http://www.gnu.org/software/make/make.html and
downloading it from one of their mirror sites.  Incase your wondering
`do I need root for this?'  No, you don't.  Just download it, compile
it, and then type:

   alias make=/path/to/make-x.y/make

   Where /path/to are replaced with the full path before the make
directory (eg. /home/myuser), and the x and y in the make-x.y directory
are substituted for the version of make you have.  Once you have
aliased make, then try and build ACE again.

   After ACE has been made, you have two options:

   * As root, you can copy *.so in the ace directory to /usr/local/lib
     and then copy *.h, *.i and *.cpp in the ace directory to
     /usr/local/include/ace, which you will have to create.  On linux
     systems you will have to type 'ldconfig' after this.  Don't forget
     to make the libs chmod 755, and the includes chmod 644.

   * When you don't have root, use the -with-acelib and -with-aceinc
     options to Magick's configure script to tell it where ACE is.
     Please note however, you will have to type the following line
     before you will be able to execute Magick:

   export
LD[lowbar]LIBRARY[lowbar]PATH=$LD[lowbar]LIBRARY[lowbar]PATH:/path/to/ACE[lowbar]wrappers/ace

   Obviously the /path/to should be replaced with the full path leading
up to the ACE[lowbar]wrappers directory (eg. /home/myuser).  The same
note above about `export ACE[lowbar]ROOT=' applies to the above export.


File: index.info,  Node: Basic Installation,  Next: Compilers and Options,  Prev: ACE Installation,  Up: Installation

Basic Installation
==================

   The `configure' shell script attempts to guess correct values for
various system-dependent variables used during compilation.  It uses
those values to create a `Makefile' in each directory of the package.
It may also create one or more `.h' files containing system-dependent
definitions.  Finally, it creates a shell script `config.status' that
you can run in the future to recreate the current configuration, a file
`config.cache' that saves the results of its tests to speed up
reconfiguring, and a file `config.log' containing compiler output
(useful mainly for debugging `configure').

   If you need to do unusual things to compile the package, please try
to figure out how `configure' could check whether to do them, and mail
diffs or instructions to the address given in the `README' so they can
be considered for the next release.  If at some point `config.cache'
contains results you don't want to keep, you may remove or edit it.

   The file `configure.in' is used to create `configure' by a program
called `autoconf'.  You only need `configure.in' if you want to change
it or regenerate `configure' using a newer version of `autoconf'.

   The simplest way to compile this package is:

   * `cd' to the directory containing the package's source code and type
     `./configure' to configure the package for your system.  If you're
     using `csh' on an old version of System V, you might need to type
     `sh ./configure' instead to prevent `csh' from trying to execute
     `configure' itself.

     Running `configure' takes awhile.  While running, it prints some
     messages telling which features it is checking for.

   * Type `make' to compile the package.

   * Optionally, type `make check' to run any self-tests that come with
     the package.

   * Type `make install' to install the programs and any data files and
     documentation.

   * You can remove the program binaries and object files from the
     source code directory by typing `make clean'.  To also remove the
     files that `configure' created (so you can compile the package for
     a different kind of computer), type `make distclean'.  There is
     also a `make maintainer-clean' target, but that is intended mainly
     for the package's developers.  If you use it, you may have to get
     all sorts of other programs in order to regenerate files that came
     with the distribution.


File: index.info,  Node: Compilers and Options,  Next: Compiling For Multiple Architectures,  Prev: Basic Installation,  Up: Installation

Compilers and Options
=====================

   Some systems require unusual options for compilation or linking that
the `configure' script does not know about.  You can give `configure'
initial values for variables by setting them in the environment.  Using
a Bourne-compatible shell, you can do that on the command line like
this: CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure

   Or on systems that have the `env' program, you can do it like this:
env CPPFLAGS=-I/usr/local/include LDFLAGS=-s ./configure


File: index.info,  Node: Compiling For Multiple Architectures,  Next: Installation Names,  Prev: Compilers and Options,  Up: Installation

Compiling For Multiple Architectures
====================================

   You can compile the package for more than one kind of computer at the
same time, by placing the object files for each architecture in their
own directory.  To do this, you must use a version of `make' that
supports the `VPATH' variable, such as GNU `make'.  `cd' to the
directory where you want the object files and executables to go and run
the `configure' script.  `configure' automatically checks for the
source code in the directory that `configure' is in and in `..'.

   If you have to use a `make' that does not supports the `VPATH'
variable, you have to compile the package for one architecture at a time
in the source code directory.  After you have installed the package for
one architecture, use `make distclean' before reconfiguring for another
architecture.


File: index.info,  Node: Installation Names,  Next: Optional Features,  Prev: Compiling For Multiple Architectures,  Up: Installation

Installation Names
==================

   By default, `make install' will install the package's files in
`/usr/local/bin', `/usr/local/man', etc.  You can specify an
installation prefix other than `/usr/local' by giving `configure' the
option `-prefix=PATH'.

   You can specify separate installation prefixes for
architecture-specific files and architecture-independent files.  If you
give `configure' the option `-exec-prefix=PATH', the package will use
PATH as the prefix for installing programs and libraries.
Documentation and other data files will still use the regular prefix.

   In addition, if you use an unusual directory layout you can give
options like `-bindir=PATH' to specify different values for particular
kinds of files.  Run `configure -help' for a list of the directories
you can set and what kinds of files go in them.

   If the package supports it, you can cause programs to be installed
with an extra prefix or suffix on their names by giving `configure' the
option `-program-prefix=PREFIX' or `-program-suffix=SUFFIX'.


File: index.info,  Node: Optional Features,  Next: Specifying the System Type,  Prev: Installation Names,  Up: Installation

Optional Features
=================

   Some packages pay attention to `-enable-FEATURE' options to
`configure', where FEATURE indicates an optional part of the package.
They may also pay attention to `-with-PACKAGE' options, where PACKAGE
is something like `gnu-as' or `x' (for the X Window System).  The
`README' should mention any `-enable-' and `-with-' options that the
package recognises.

   For packages that use the X Window System, `configure' can usually
find the X include and library files automatically, but if it doesn't,
you can use the `configure' options `-x-includes=DIR' and
`-x-libraries=DIR' to specify their locations.


File: index.info,  Node: Specifying the System Type,  Next: Sharing Defaults,  Prev: Optional Features,  Up: Installation

Specifying the System Type
==========================

   There may be some features `configure' can not figure out
automatically, but needs to determine by the type of host the package
will run on.  Usually `configure' can figure that out, but if it prints
a message saying it can not guess the host type, give it the
`-host=TYPE' option.  TYPE can either be a short name for the system
type, such as `sun4', or a canonical name with three fields:
CPU-COMPANY-SYSTEM

   See the file `config.sub' for the possible values of each field.  If
`config.sub' isn't included in this package, then this package doesn't
need to know the host type.

   If you are building compiler tools for cross-compiling, you can also
use the `-target=TYPE' option to select the type of system they will
produce code for and the `-build=TYPE' option to select the type of
system on which you are compiling the package.


File: index.info,  Node: Sharing Defaults,  Next: Operation Controls,  Prev: Specifying the System Type,  Up: Installation

Sharing Defaults
================

   If you want to set default values for `configure' scripts to share,
you can create a site shell script called `config.site' that gives
default values for variables like `CC', `cache[lowbar]file', and
`prefix'.  `configure' looks for `PREFIX/share/config.site' if it
exists, then `PREFIX/etc/config.site' if it exists.  Or, you can set the
`CONFIG[lowbar]SITE' environment variable to the location of the site
script.  A warning: not all `configure' scripts look for a site script.


File: index.info,  Node: Operation Controls,  Next: Security Tips,  Prev: Sharing Defaults,  Up: Installation

Operation Controls
==================

   `configure' recognises the following options to control how it
operates.

`--cache-file=FILE'
     Use and save the results of the tests in FILE instead of
     `./config.cache'.  Set FILE to `/dev/null' to disable caching, for
     debugging `configure'.

`--help'
     Print a summary of the options to `configure', and exit.

`--quiet'
     -silent -q Do not print messages saying which checks are being
     made.  To suppress all normal output, redirect it to `/dev/null'
     (any error messages will still be shown).

`--srcdir=DIR'
     Look for the package's source code in directory DIR.  Usually
     `configure' can determine that directory automatically.

`--version'
     Print the version of Autoconf used to generate the `configure'
     script, and exit.

`--with-acelib=file'
     -with-aceinc=path This specifies where the makefile should look
     for the ACE library file, and its includes respectively.  You must
     specify full pathnames.  Verification on what you have entered is
     minimal (ie. will only verify the existence of the library file,
     and OS.h in the include directory).  This should only be used if
     Magick does not detect the ACE library.

`--with-zlib=file'
     -with-zinc=path This specifies where the makefile should look for
     the ZLIB library file, and its includes respectively.  You must
     specify full pathnames.  Verification on what you have entered is
     minimal (ie. will only verify the existence of the library file,
     and zlib.h in the include directory).  This should only be used if
     Magick does not detect the ZLIB library.

`--enable-bsdthreads'
     This is mutually exclusive of -with-threadlib and -with-threadinc,
     it specifies to use the -pthreads option with GCC or CC when
     linking the magick binary.  This is used for systems where
     pthreads is ingrained in the standard C library, specifically, BSD.

`--with-threadlib=file'
     -with-threadinc=path This specifies where the makefile should look
     for a threads library file, and its includes respectively.  You
     must specify full pathnames.  Verification on what you have
     entered is minimal (ie. will only verify the existence of the
     library file, and the include directory exists).  This should only
     be used if Magick does not detect a threads library.

`--with-include=path'
     -with-libdir=path -with-lib=lib These will add -I, -L and -l
     options to the compile/link options.  If you find Magick wont
     compile on your system due to missing symbols, or undefined
     references, it may not have been able to find a header it needed,
     or it may not have included a required library.  The include and
     libdir should both be directories where to find the include files
     or libraries, where lib should be the library name with the lib
     prefix and the .so or .a postfix truncated.  eg. libpthread.so
     becomes pthread.

`--enable-des'
     -disable-des This turns on or off encryption support in Magick.
     Some versions of Magick may not be distributed with DES
     encryption, in which case you will have to download it and enable
     it to use it.

`--enable-trace'
     -disable-trace This turns on or off the internal tracing functions
     of Magick.  This can cause problems right now with large
     databases.  It is therefore by default disabled.

`--enable-locks'
     -disable-locks This turns on or off thread locking.  Thread
     locking is essential for ensuring only one thread can access a bit
     of data at once.  On some bad thread implementations, this will
     stop segfaults, however it is a big target asking for data
     corruption turning this off.

`--enable-mpatrol'
     -disable-mpatrol This turns on or off the usage of the memory
     error checking and profiling software mpatrol
     (http://www.cbmamiga.demon.co.uk/mpatrol).  This software is
     useful in the fact it looks for memory access errors (eg.
     accessing unitialised memory, exceeding memory bounds, not freeing
     memory, etc).  However it slows the program down dramatically.
     Turning this on causes a new log file (mpatrol.log) to be created.

`--enable-efence'
     -disable-efence This turns on or off the usage of the memory error
     checking and profiling software Electric Fence
     (http://ftp://ftp.perens.com/pub/ElectricFence).  This software is
     useful in the fact it looks for memory access errors (eg.
     accessing unitialised memory, exceeding memory bounds, not freeing
     memory, etc).  However it slows the program down dramatically.
     Turning this on causes the program to stop at the first memory
     problem (so it is recommended you run this in a debugger).

`--with-keylen=size'
     This is the maximum size of the key file, and the input key that
     you may type in.  This defaults to 1024, and you should not need
     more.

   `configure' also accepts some other, not widely useful, options.


File: index.info,  Node: Security Tips,  Prev: Operation Controls,  Up: Installation

Security Tips
=============

   Magick has several facilities to ensure your databases and inter-
magick communications are kept secure and encrypted.  The main methods
of facilitating this are:
   * Databases and inter-magick communication is encrypted with a key
     through 3DES.  This key resides in a key file.

   * The key file itself is encrypted with two keys generated at
     compile time, to ensure the key file is never clear text.

   * EACH compile creates new key file keys, which means you must
     re-generate the key file each time you compile, ensuring it does
     not get stale (and becomes invalid if someone gets it!)

   To ensure the security of your databases and communication, you
should
   * Chose a long and complex database key, you must remember this
     somehow, incase you need to generate a new database key, however
     you wont need it often.  Also choose long and varied key file
     keys, they can be up to 1024 bytes long (or longer with the
     -with-keylen parameter to configure)!

   * Recompile magick every so often.  This forces you to re-generate
     the database key file with new keys, which is always a good idea!

   Windows users will not automatically generate a new keyset with each
compile.  A default (generic, consider it hacked) keyset is supplied
with the magick source.  It is however recommended that you create your
own random one (each compile).  To do this, you must:
   * Compile the genrankeys program

   * From the include directory, execute:  genrankeys crypt.h

   REMEMBER:  If you forget your database password, then you had BETTER
decrypt your databases (via. the config file) ASAP, as if you lose your
key, and do not know the password to generate a new one, you may as
well remove the file and start again.

   Pre-compiled binaries will not be able to change the key file keys.
This could be considered an advantage of compiling yourself.


File: index.info,  Node: Usage,  Next: Questions and Answers,  Prev: Installation,  Up: Top

Usage
*****

* Menu:

* Support files::
* General Usage::
* Functionality::


File: index.info,  Node: Support files,  Next: General Usage,  Up: Usage

Support files
=============

   All files and directories listed are relative to the current
'Services Directory'. The services directory is set with the -dir
command line option. If none is specified, it will default to the
current directory.

`magick.ini'
     This file is included with your Magick distribution in the docs
     directory.  This file must either be specified on the command line
     with the -config option, or in the services directory.  This file
     contains all settings that Magick II will use throughout its
     execution (these can be changed and reloaded online).

`magick.mnd'
     This is the Magick New Datafile (or mound) file.  This stores all
     data that is stored by Magick.  This file is not human readable,
     and is often encrypted and/or compressed.  This filename is a
     setting in the magick.ini file, and may be changed.  This file
     will be created if it does not exist.

`magick.log'
     This is the log file which logs all activity of note that happens
     inside Magick.  The verbosity of this log file can vary depending
     on the -debug option, or the VERBOSE config option.  This file may
     be zeroed without any decremental effects, or if it is removed,
     the OFF and ON online commands will re-establish the filehandle.
     This filename is a setting in the magick.ini file, and may be
     changed.  This file is created if it doesn't exist.

`magick.pid'
     This file indicates the process ID of the currently running Magick
     on UNIX-based systems.  This may be used to easily determine if
     Magick is running, and to kill a running copy. This filename is a
     setting in the magick.ini file, and may be changed.  This file is
     overwritten on Magick startup.

`magick.motd'
     This contains the text of the server motd that will be displayed
     to any user who types /MOTD services.server in their IRC client.
     This filename is a setting in the magick.ini file, and may be
     changed.

`magick.key'
     This contains the key for your databases, encrypted.  This key
     file should be generated with magick[lowbar]keygen.  This file may
     not be used by more than one set of services (unless the binaries
     are copied), as each compile requires regenerating this file.  This
     filename is a setting in the magick.ini file, and may be changed.

`lang\*.lng'
     These files contain the responses Magick will send back to users
     for any command, or output from any procedure.  These files are
     'tokenised', and are substituted with actual values.  The default
     language file to used is set by the DEF[lowbar]LANGUAGE parameter
     in the magick.ini file, however languages may be set per-user.

`lang\*.lfo'
     These files contain the log file outputs Magick will use for all
     messages going to the magick.log file.  These files are
     'tokenised', and are substituted with actual values.  The file that
     is used is set by the DEF[lowbar]LANGUAGE parameter in the
     magick.ini file.

`lang\*.hlp'
     These files contain the help text that Magick uses to respond to
     all HELP commands.  The default help file used is set by the
     DEF[lowbar]LANGUAGE parameter in the magick.ini file, however
     languages may be set per-user.

`files\pic'
     This directory is where all user's pictures are stored.  The files
     themselves are stored as hexadecimal numbers, with no extension -
     the map to real filenames is stored in the database.  The path
     name actually used is a setting in the magick.ini file.

`files\memo'
     This directory is where all attachments are stored.  The files
     themselves are stored as hexadecimal numbers, with no extension -
     the map to real filenames is stored in the database.  The path
     name actually used is a setting in the magick.ini file.

`files\public'
     This directory is where all files in the public filesystem are
     stored.  The files themselves are stored as hexadecimal numbers,
     with no extension - the map to real filenames is stored in the
     database.  The path name actually used is a setting in the
     magick.ini file.

`files\temp'
     This directory is where all files involved in DCC transfers
     (sending or receiving) are stored.  These files are considered
     volatile, and if Magick is not running, can safely be removed. The
     files themselves are stored as hexadecimal numbers, with no
     extension. The path name actually used is a setting in the
     magick.ini file.


File: index.info,  Node: General Usage,  Next: Functionality,  Prev: Support files,  Up: Usage

General Usage
=============

   Magick once started, becomes a background process.  It accepts a
number of command-line options that override the settings of their
equivalents on load.  NOTE: If the config file is loaded again at
runtime, the settings in the config file will be used.

     --help (or -?)  Help output (summary of the below).
     --dir X         Set the initial services directory.
     --config X      Set the name of the config file.
     --convert X     Convert another version of services databases
                     to Magick II format, where X is the type of
                     database to convert.  Currently recognised:
                             magick
     --trace X:Y     Set the trace level on startup, equivalent of
                     using the OperServ TRACE SET command while
                     running, where X is the trace type (or ALL), and
                     Y is the trace level in hex.

   All other command line options just override the configuration file
settings.  Below is a list of the overrides available, and the settings
they override in the configuration file.  Please see the configuration
file's comments for more information on each option, and what it does.

     PARAMATER       SHORT   GROUP           OPTION
     ---------       -----   -----           ------
     --name X        -n      STARTUP         SERVER_NAME
     --desc X        -d      STARTUP         SERVER_DESC
     --user X        -u      STARTUP         SERVICES_USER
     --host X        -h      STARTUP         SERVICES_HOST
     --ownuser       -o      STARTUP         OWNUSER=true
     --protocol X    -P      STARTUP         PROTOCOL
     --level X       -l      STARTUP         LEVEL
     --lagtime X     -g      STARTUP         LAGTIME
     --verbose       -v      FILES           VERBOSE=true
     --log X         -L      FILES           LOGFILE
     --dbase X       -D      FILES           DATABASE
     --langdir X     -S      FILES           LANGDIR
     --encrypt       -E      FILES           ENCRYPTION=true
     --decrypt       -e      FILES           ENCRYPTION=false
     --keyfile X     -K      FILES           KEYFILE
     --compress X    -c      FILES           COMPRESSION
     --relink X      -r      CONFIG          SERVER_RELINK
     --cycle X       -t      CONFIG          CYCLETIME
     --save X        -w      CONFIG          SAVETIME
     --check X       -T      CONFIG          CHECKTIME
     --ping X        -p      CONFIG          PING_FREQUENCY
     --thread X      -X      CONFIG          MIN_THREADS
     --lwm X         -m      CONFIG          LOW_WATER_MARK
     --hwm X         -M      CONFIG          HIGH_WATER_MARK
     --append        -a      NICKSERV        APPEND_RENAME=true
     --rename        -A      NICKSERV        APPEND_RENAME=false
     --ident X       -R      NICKSERV        IDENT
     --language X    -s      NICKSERV        DEF_LANGUAGE
     --nodcc         -x      NICKSERV        PICEXT=  (nothing)
                             MEMOSERV        FILES=0
     --inflight X    -f      MEMOSERV        INFLIGHT
     --logignore     -i      OPERSERV        LOG_IGNORE=true
     --ignore X      -I      OPERSERV        IGNORE_METHOD

   Example:

     ./magick --config /etc/magick.ini

   After Magick is running, it should be totally driven through the
on-line clients (NickServ, ChanServ, OperServ, etc).  However, in
certain cases, events happen and these interfaces are either not
available, not responding, too slow, or don't recognise you.  For this
eventuality, all UNIX SIGNALS have been trapped, and some perform extra
functions that 'originally' intended.

     SIGNAL  NUMBER  EQUIVALENT      DESCRIPTION
     ------  ------  ----------      -----------
     SIGHUP  1       OS RELOAD       Re-loads the config file.
     SIGINT  2       OS SIGNON       Attempts to sign on all clients.
     SIGTERM 15      OS UPDATE       Saves the databases.

   Some have queried me on why SIGTERM saves the databases.  During
shutdown of many systems, the shutdown scripts will send a SIGTERM to
all running processes, wait a while, then send a SIGKILL (9).  This
gives us a chance to save our databases before we're killed.  This also
means that you must use kill -KILL (kill -9) to kill Magick once it has
been started.

   To use encryption, you must generate a key file with the program
magick[lowbar]keygen.  This program accepts a maximum of two arguments,
being the output key filename, and an input file with the plain text
version of the key respectively.  If neither argument is supplied, it
will ask you to enter the data interactively.

   On unix terminals that support it, the text entered at the key
prompts will be hidden, however to not bank on this, and always ensure
no one can look over your shoulder of sniff your network traffic to
find out what the clear-text password is.  The maximum size of a key is
specified at compile time, and may be changed with a configure option
(see INSTALL for further details).

   Example 1:

     ./magick_keygen
     Magick IRC Services - http://www.magick.tm
         (c) 1997-2000 Preston A. Elder [lt    ]prez@magick.tm[gt    ]
         (c) 1998-2000 William King [lt    ]ungod@magick.tm[gt    ]
     
     Enter filename to output to [magick.key]:
     Enter database key:
     Re-Enter database key:
     
     Created 362 byte keyfile.

   Example 2:

     ./magick_keygen magick.key magick.plain
     Magick IRC Services - http://www.magick.tm
         (c) 1997-2000 Preston A. Elder [lt    ]prez@magick.tm[gt    ]
         (c) 1998-2000 William King [lt    ]ungod@magick.tm[gt    ]
     
     Created 1024 byte keyfile.


File: index.info,  Node: Functionality,  Prev: General Usage,  Up: Usage

Functionality
=============

   Magick has 6 main services, and offers the ability to script either
added functionality to these existing services, or create totally new
services through its scripting language.  This section gives an
overview of the main functionality and purpose of the hard-coded
services.  Please note, the actual nicknames of each of the below
services may be different on each network.

   NickServ is a services that allows users to register their IRC
nicknames so that no one else may take them.  Users may then set
various options on their nickname record, such as privacy mode, kill
protection, etc that affect the way their nickname is treated, and how
services respond to them.  They may also set purely informational
fields in their nickname record they is displayed on an INFO request.
NickName registration is required to execute many other commands in
services, be added to a channel access list, or receive memos from
other users.

   ChanServ is a service that allows users to register a channel on the
IRC network, so that they may specify who has access to them, and who
shall be automatically kicked from them.  This not only prevents such
things as channel takeovers, but establishes a definite 'seniority'
system in the channel.  ChanServ also allows users to set various
options on their channel records, from the purely informational that is
displayed in an INFO request, to options that change the behaviour of
services, and how users are treated in a channel.  This service also
offers such features as on-join greetings, user-based greetings, etc.

   MemoServ is a service that allows users to send memos to other
users, or post news articles to channels.  This service also allows
such features as forwarding, or replying to memos, and even attaching
files via. DCC to memos (to other users only).  This service also
integrates with NickServ's ignore list, and ChanServ's access list to
vary the ability to send, or read memos or news articles.

   CommServ is a service that maintains 'committees' or groups of
users.  These groups can be simply a list of users who have a common
interest, or can alter a user's access to certain features of services.
You may also send memos to all members of a committee or set logon
messages for committees that all members will see on signon.  Services
has 6 'default' committees:
`SADMIN'
     Services Administrators - Members of this committee are hard-coded
     into the Magick configuration file.

`SOP'
     Services Operators - Members of this committee are added by
     members of the SADMIN committee.

`ADMIN'
     Server Administrators - Members of this committee are added by
     members of the SADMIN committee.

`OPER'
     IRC Operators - Members of this committee are added by members of
     the ADMIN committee.

`REGD'
     All Registered Users - This committee may not be modified, and its
     members are dynamic.

`ALL'
     All Users - This committee may not be modified, and its members
     are dynamic.

   OperServ is a services that allows IRC Operators to keep control on
the network.  This service offers functions like an Automatic Kill
list, Clone Protection (and overriding), Services Ignore, IRC Operator
Denying, as well as the ability to JUPE (fake-link) a server, change a
user or channels modes, and many more functions.

   ServMsg is mainly an informational service, users may get help,
statistics and information about services, and the network they are
connected to from this service.  This service also offers the ability
for Server Administrators to send a global message that will be sent to
all users on the network, and services operators to offer files to
users through the public file system.


File: index.info,  Node: Questions and Answers,  Next: License,  Prev: Usage,  Up: Top

Questions and Answers
*********************

* Menu:

* My IRCD isn't supported what can I do?::
* I like these services and want to pay the author!::


File: index.info,  Node: My IRCD isn't supported what can I do?,  Next: I like these services and want to pay the author!,  Up: Questions and Answers

My IRCD isn't supported what can I do?
======================================

   If this is the case, and none of the pre-defined IRCD's are
compatible with it, please find out exactly (at a server to server
protocol level) how your IRCD is different to the ones Magick supports
(or ask the IRCD's author) and email the list of differences to the
Magick Development Team magick-devel@magick.tm.

   Here are some of the IRCD's we know are compatible with ones
supported:
     IRCD                    COMPATIBLE
     ------------------------------------------------
     Wrecked IRCD            DALNet >= 4.4.15


File: index.info,  Node: I like these services and want to pay the author!,  Prev: My IRCD isn't supported what can I do?,  Up: Questions and Answers

I like these services and want to pay the author!
=================================================

   OK, so this isn't something I hear, but a little wishful thinking
never hurts.  If you want to send me something by snail mail, then feel
free to do so to PO BOX 893, SUTHERLAND, NSW, 2232, Australia.  I
always like tokens of appreciation, puts a smile on my face and makes
the whole thing worth while (no, not necessarily money, but that is
always nice!).  Remember tho, if you ARE going to send me money, don't
send cash, and ensure it is cashable in Australia (an international
postal order is usually best).


File: index.info,  Node: License,  Next: Copyright,  Prev: Questions and Answers,  Up: Top

License
*******

   GNU GENERAL PUBLIC LICENSE Version 2, June 1991

   Copyright (C) 1989, 1991 Free Software Foundation, Inc.  59 Temple
Place, Suite 330, Boston, MA  02111-1307  USA Everyone is permitted to
copy and distribute verbatim copies of this license document, but
changing it is not allowed.

   Preamble

   The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software-to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Library General Public License instead.)  You can apply it to
your programs, too.

   When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it in
new free programs; and that you know you can do these things.

   To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

   For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

   We protect your rights with two steps: (1) copyright the software,
and (2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

   Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

   Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

   The precise terms and conditions for copying, distribution and
modification follow.

   GNU GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING,
DISTRIBUTION AND MODIFICATION

   0. This License applies to any program or other work which contains
a notice placed by the copyright holder saying it may be distributed
under the terms of this General Public License.  The "Program", below,
refers to any such program or work, and a "work based on the Program"
means either the Program or any derivative work under copyright law:
that is to say, a work containing the Program or a portion of it,
either verbatim or with modifications and/or translated into another
language.  (Hereinafter, translation is included without limitation in
the term "modification".)  Each licensee is addressed as "you".

   Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running the Program is not restricted, and the output from the Program
is covered only if its contents constitute a work based on the Program
(independent of having been made by running the Program).  Whether that
is true depends on what the Program does.

   1. You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any warranty;
and give any other recipients of the Program a copy of this License
along with the Program.

   You may charge a fee for the physical act of transferring a copy, and
you may at your option offer warranty protection in exchange for a fee.

   2. You may modify your copy or copies of the Program or any portion
of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

   a) You must cause the modified files to carry prominent notices
stating that you changed the files and the date of any change.

   b) You must cause any work that you distribute or publish, that in
whole or in part contains or is derived from the Program or any part
thereof, to be licensed as a whole at no charge to all third parties
under the terms of this License.

   c) If the modified program normally reads commands interactively
when run, you must cause it, when started running for such interactive
use in the most ordinary way, to print or display an announcement
including an appropriate copyright notice and a notice that there is no
warranty (or else, saying that you provide a warranty) and that users
may redistribute the program under these conditions, and telling the
user how to view a copy of this License.  (Exception: if the Program
itself is interactive but does not normally print such an announcement,
your work based on the Program is not required to print an
announcement.)

   These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Program,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote
it.

   Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Program.

   In addition, mere aggregation of another work not based on the
Program with the Program (or with a work based on the Program) on a
volume of a storage or distribution medium does not bring the other
work under the scope of this License.

   3. You may copy and distribute the Program (or a work based on it,
under Section 2) in object code or executable form under the terms of
Sections 1 and 2 above provided that you also do one of the following:

   a) Accompany it with the complete corresponding machine-readable
source code, which must be distributed under the terms of Sections 1
and 2 above on a medium customarily used for software interchange; or,

   b) Accompany it with a written offer, valid for at least three
years, to give any third party, for a charge no more than your cost of
physically performing source distribution, a complete machine-readable
copy of the corresponding source code, to be distributed under the
terms of Sections 1 and 2 above on a medium customarily used for
software interchange; or,

   c) Accompany it with the information you received as to the offer to
distribute corresponding source code.  (This alternative is allowed
only for non-commercial distribution and only if you received the
program in object code or executable form with such an offer, in accord
with Subsection b above.)

   The source code for a work means the preferred form of the work for
making modifications to it.  For an executable work, complete source
code means all the source code for all modules it contains, plus any
associated interface definition files, plus the scripts used to control
compilation and installation of the executable.  However, as a special
exception, the source code distributed need not include anything that
is normally distributed (in either source or binary form) with the
major components (compiler, kernel, and so on) of the operating system
on which the executable runs, unless that component itself accompanies
the executable.

   If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent access
to copy the source code from the same place counts as distribution of
the source code, even though third parties are not compelled to copy
the source along with the object code.

   4. You may not copy, modify, sublicense, or distribute the Program
except as expressly provided under this License.  Any attempt otherwise
to copy, modify, sublicense or distribute the Program is void, and will
automatically terminate your rights under this License.  However,
parties who have received copies, or rights, from you under this
License will not have their licenses terminated so long as such parties
remain in full compliance.

   5. You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Program or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Program (or any work based on the
Program), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying the
Program or works based on it.

   6. Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the
original licensor to copy, distribute or modify the Program subject to
these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

   7. If, as a consequence of a court judgement or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

   If any portion of this section is held invalid or unenforceable under
any particular circumstance, the balance of the section is intended to
apply and the section as a whole is intended to apply in other
circumstances.

   It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

   This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

   8. If the distribution and/or use of the Program is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Program under this License may
add an explicit geographical distribution limitation excluding those
countries, so that distribution is permitted only in or among countries
not thus excluded.  In such case, this License incorporates the
limitation as if written in the body of this License.

   9. The Free Software Foundation may publish revised and/or new
versions of the General Public License from time to time.  Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.

   Each version is given a distinguishing version number.  If the
Program specifies a version number of this License which applies to it
and "any later version", you have the option of following the terms and
conditions either of that version or of any later version published by
the Free Software Foundation.  If the Program does not specify a
version number of this License, you may choose any version ever
published by the Free Software Foundation.

   10. If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the
author to ask for permission.  For software which is copyrighted by the
Free Software Foundation, write to the Free Software Foundation; we
sometimes make exceptions for this.  Our decision will be guided by the
two goals of preserving the free status of all derivatives of our free
software and of promoting the sharing and reuse of software generally.

   NO WARRANTY

   11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO
WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND,
EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS
WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

   12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU
FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF
SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
DAMAGES.

   END OF TERMS AND CONDITIONS

   This General Public License does not permit incorporating your
program into proprietary programs.  If your program is a subroutine
library, you may consider it more useful to permit linking proprietary
applications with the library.  If this is what you want to do, use the
GNU Library General Public License instead of this License.


File: index.info,  Node: Copyright,  Prev: License,  Up: Top

Copyright
*********

   Magick Copyright 2000 Magick Development Team, magick-devel@magick.tm

   This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

   This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

   You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software Foundation,
Inc., 675 Mass Ave, Cambridge, MA 02139, USA.



Tag Table:
Node: Top110
Node: Introduction472
Node: Dedication1519
Node: Authors2135
Node: Changes4384
Node: Magick II4547
Node: Magick I6538
Node: Services 3-010315
Node: Pre-Services 3-014706
Node: Installation14979
Node: How to obtain Magick15393
Node: Requirements15780
Node: ACE Installation16626
Node: Basic Installation19782
Node: Compilers and Options22332
Node: Compiling For Multiple Architectures22979
Node: Installation Names23970
Node: Optional Features25153
Node: Specifying the System Type25923
Node: Sharing Defaults26946
Node: Operation Controls27592
Node: Security Tips32711
Node: Usage34724
Node: Support files34896
Node: General Usage39495
Node: Functionality45263
Node: Questions and Answers49070
Node: My IRCD isn't supported what can I do?49312
Node: I like these services and want to pay the author!50078
Node: License50848
Node: Copyright66340

End Tag Table
